{"version":3,"sources":["icons/search.svg","logo.svg","icons/searchRandom.svg","icons/back.svg","icons/copy.svg","icons/showMore.svg","icons/hamburgerMenu.svg","icons/about.svg","icons/contact.svg","icons/download.svg","icons/plus.svg","TopNavMenu.js","TopNavDesktop.js","TopNavBigScreen.js","TopNavMobile.js","TopNav.js","Filter.js","Snackbar.js","QuoteMobile.js","ContentMobile.js","Quote.js","ContentDesktop.js","Content.js","AboutPage.js","DownloadPage.js","ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","menuClick","isMobile","menuClass","menu","document","querySelectorAll","style","display","marginTop","e","menuBlur","setTimeout","TopNavMenu","props","useMediaQuery","query","react_default","a","createElement","className","src","menuIcon","tabIndex","onClick","onBlur","alt","width","height","href","aboutIcon","contactIcon","downloadIcon","TopNavDesktop","_this","Object","classCallCheck","this","_super","call","state","searchQuery","isRandomSearch","languages","value","label","selectedLanguage","_this2","src_TopNavMenu","logo","onSubmit","updateSearchQuery","preventDefault","autoFocus","type","placeholder","name","paddingLeft","onChange","setState","target","title","searchIcon","searchRandomIcon","react_select_browser_esm","options","newValue","actionMeta","theme","objectSpread2","borderRadius","colors","primary25","primary","React","Component","TopNavBigScreen","styles","control","base","minHeight","TopNavMobile","searchBoxActivated","backIcon","TopNav","isBigScreen","isDesktopOrTablet","src_TopNavBigScreen","src_TopNavDesktop","src_TopNavMobile","Filter","filters","initializeFilters","values","length","keys","map","filterName","i","key","checked","onCheckboxChange","all","pastProps","pastState","arraysEqual","filtersDict","forEach","element","isChecked","newFilters","JSON","parse","stringify","onFilterChange","getCheckedFiltersName","checkedFilters","reduce","c","getOwnPropertyNames","b","Snackbar","_React$Component","inherits","createSuper","openSnackBar","message","arguments","undefined","isActive","createClass","QuoteMobile","modalIsOpen","modalStyle","content","top","left","right","bottom","marginRight","transform","snackbarRef","createRef","openModal","bind","assertThisInitialized","closeModal","quote","color","author","backgroundColor","copyQuote","copyIcon","src_Snackbar","ref","onMouseDown","lib_default","isOpen","onRequestClose","closeTimeoutMS","margin","source","language","chapter","number","showMoreIcon","copyToClipBoard","current","el","setAttribute","position","body","appendChild","select","execCommand","removeChild","ContentMobile","_useState","useState","_useState2","slicedToArray","contentMobileActivated","setContentMobileActivated","plusIcon","updateAuthorFilters","authorFilters","updateSourceFilters","sourceFilters","Fragment","src_Filter","quotes","index","src_QuoteMobile","showMoreQuotes","disabled","allQuotesFetched","Quote","ContentDesktop","src_Quote","Content","lastSearchId","quotesPerFetch","quotesFetched","authorFiltersSelected","sourceFiltersSelected","react_responsive_default","minDeviceWidth","src_ContentDesktop","maxDeviceWidth","src_ContentMobile","actualiseQuotes","searchId","_this3","fetchFilterValues","fetchQuotes","_this4","fetch","concat","then","res","json","authors","x","push","sources","_this5","accumulateQuotes","authorFilter","sourceFilter","quotesReady","_this6","AboutPage","DownloadPage","ContactPage","uuidv4","react_router_dom","react_router","exact","path","src_TopNav","src_Content","src_AboutPage","src_DownloadPage","src_ContactPage","replace","r","Math","random","toString","Boolean","window","location","hostname","match","ReactDOM","render","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b3d7bd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.275e1e4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.95f8d4a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchRandom.7995c455.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.6468634d.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.4e5afb15.svg\";","module.exports = __webpack_public_path__ + \"static/media/showMore.9374f8f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburgerMenu.1a1bc5e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.5641eb51.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.eed4b218.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.543de713.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.229d88d5.svg\";","import React from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport menuIcon from './icons/hamburgerMenu.svg';\r\nimport aboutIcon from './icons/about.svg';\r\nimport contactIcon from './icons/contact.svg';\r\nimport downloadIcon from './icons/download.svg';\r\n\r\nconst TopNavMenu = (props) => {\r\n    const isMobile = useMediaQuery({\r\n        query: '(max-device-width: 600px)'\r\n    });\r\n    if (isMobile) {\r\n        return (\r\n            <div className=\"menuMobile\">\r\n                <img src={menuIcon} tabIndex={0} onClick={() => menuClick(true)} onBlur={(e) => menuBlur(e, true)} alt=\"\" width=\"100%\" height=\"100%\" />\r\n                <ul style={{ display: 'none' }}  >\r\n                    <li><a href=\"./about\"><div style={{ display: \"flex\" }}><img src={aboutIcon} alt=\"\" className=\"menuIcon\" />About</div></a></li>\r\n                    <li><a href=\"./download\"><div style={{ display: \"flex\" }}><img src={contactIcon} alt=\"\" className=\"menuIcon\" />Download all quotes</div></a></li>\r\n                    <li><a href=\"./contact\"><div style={{ display: \"flex\" }}><img src={downloadIcon} alt=\"\" className=\"menuIcon\" />Contact</div></a></li>\r\n                </ul>\r\n            </div >);\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"menu\" >\r\n                <img src={menuIcon} tabIndex={0} onClick={() => menuClick(false)} onBlur={(e) => menuBlur(e, false)} alt=\"\" width=\"100%\" height=\"100%\" />\r\n                <ul style={{ display: 'none' }}   >\r\n                    <li><a href=\"./about\"><div style={{ display: \"flex\" }}><img src={aboutIcon} alt=\"\" className=\"menuIcon\" />About</div></a></li>\r\n                    <li><a href=\"./download\"><div style={{ display: \"flex\" }}><img src={contactIcon} alt=\"\" className=\"menuIcon\" />Download all quotes</div></a></li>\r\n                    <li><a href=\"./contact\"><div style={{ display: \"flex\" }}><img src={downloadIcon} alt=\"\" className=\"menuIcon\" />Contact</div></a></li>\r\n                </ul>\r\n            </div >);\r\n    }\r\n}\r\n\r\nfunction menuClick(isMobile) {\r\n    try {\r\n        let menuClass = isMobile ? '.menuMobile ul' : '.menu ul';\r\n        let menu = document.querySelectorAll(menuClass)[0];\r\n        //toggle menu apparence\r\n        if (menu.style.display === \"none\") {\r\n            menu.style.display = \"block\";\r\n            menu.style.marginTop = \"10px\";\r\n        }\r\n        else {\r\n            menu.style.display = \"none\";\r\n            menu.style.marginTop = \"0px\";\r\n        }\r\n    }\r\n    catch (e) { }\r\n\r\n}\r\n\r\nfunction menuBlur(isMobile) {\r\n    //hack: the blur is anywhere except the menu button...that means that the open menu also fires blur\r\n    //preventing the user to follow the hyperlink of a menu item\r\n    //a simple workaround is to fire it after 200ms, so if the user has clicked on a menu item\r\n    //he will be redirect to the requested page\r\n    setTimeout(function () {\r\n        try {\r\n            let menuClass = isMobile ? '.menuMobile ul' : '.menu ul';\r\n            let menu = document.querySelectorAll(menuClass)[0];\r\n            menu.style.display = \"none\";\r\n            menu.style.marginTop = \"0em\";\r\n        }\r\n        catch (e) { }\r\n\r\n    }, 200);\r\n}\r\n\r\nexport default TopNavMenu;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport searchIcon from './icons/search.svg';\r\nimport searchRandomIcon from './icons/searchRandom.svg';\r\nimport Select from 'react-select';\r\nimport TopNavMenu from './TopNavMenu';\r\n\r\nclass TopNavDesktop extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchQuery: \"\",\r\n            isRandomSearch: false,\r\n            languages: [\r\n                { value: 'en', label: 'En' },\r\n                { value: 'fr', label: 'Fr' }],\r\n            selectedLanguage: { value: 'en', label: 'En' }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"topNavLaptop\">\r\n                <div className=\"menuAndLogo\">\r\n                    <TopNavMenu/>\r\n                    <div className=\"logo\">\r\n                        <a href=\"/\">\r\n                            <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <form className=\"searchBox\" onSubmit={(e) => { this.props.updateSearchQuery(this.state.searchQuery, this.state.isRandomSearch); e.preventDefault(); }}>\r\n                    <input autoFocus type=\"text\" alt=\"\" placeholder=\"Search Spiritual Quotes\" name=\"search\" style={{ paddingLeft: \"8px\" }} value={this.state.searchQuery} onChange={(e) => this.setState({ searchQuery: e.target.value })} />\r\n                    <input className=\"searchIcon\" title=\"search\" alt=\"search\" type=\"image\" src={searchIcon} width=\"100%\" height=\"100%\" onClick={() => this.setState({ isRandomSearch: false })} />\r\n                    <input className=\"searchIcon\" title=\"search randomly\" alt=\"search randomly\" type=\"image\" width=\"100%\" height=\"100%\" src={searchRandomIcon} onClick={() => this.setState({ isRandomSearch: true })} />\r\n                </form>\r\n                <div className=\"languagesSelector\">\r\n                    <Select\r\n                        options={this.state.languages}\r\n                        value={[this.state.selectedLanguage]}\r\n                        onChange={(newValue, actionMeta) => this.setState({ selectedLanguage: newValue })}\r\n                        theme={theme => ({\r\n                            ...theme,\r\n                            borderRadius: 2,\r\n                            colors: {\r\n                                ...theme.colors,\r\n                                primary25: '#EAEAEA',\r\n                                primary: 'lightgray',\r\n                            },\r\n                        })}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavDesktop;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport searchIcon from './icons/search.svg';\r\nimport searchRandomIcon from './icons/searchRandom.svg';\r\nimport Select from 'react-select';\r\nimport TopNavMenu from './TopNavMenu'\r\n\r\nclass TopNavBigScreen extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchQuery: \"\",\r\n            isRandomSearch: false,\r\n            languages: [\r\n                { value: 'en', label: 'English' },\r\n                { value: 'fr', label: 'Français' }],\r\n            selectedLanguage: { value: 'en', label: 'English' }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"topNavBigScreen\">\r\n                <div className=\"menuAndLogo\">\r\n                    <TopNavMenu/>\r\n                    <div className=\"logo\">\r\n                        <a href=\"/\">\r\n                            <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <form className=\"searchBox\" onSubmit={(e) => { this.props.updateSearchQuery(this.state.searchQuery, this.state.isRandomSearch); e.preventDefault(); }}>\r\n                    <input autoFocus type=\"text\" alt=\"\" placeholder=\"Search Spiritual Quotes\" name=\"search\" style={{ paddingLeft: \"8px\" }} value={this.state.searchQuery} onChange={(e) => this.setState({ searchQuery: e.target.value })} />\r\n                    <input className=\"searchIcon\" title=\"search\" alt=\"search\" type=\"image\" src={searchIcon} width=\"100%\" height=\"100%\" onClick={() => this.setState({ isRandomSearch: false })} />\r\n                    <input className=\"searchIcon\" title=\"search randomly\" alt=\"search randomly\" type=\"image\" width=\"100%\" height=\"100%\" src={searchRandomIcon} onClick={() => this.setState({ isRandomSearch: true })} />\r\n                </form>\r\n                <div className=\"languagesSelectorBigScreen\">\r\n                    <Select\r\n                        options={this.state.languages}\r\n                        value={[this.state.selectedLanguage]}\r\n                        onChange={(newValue, actionMeta) => this.setState({ selectedLanguage: newValue })}\r\n                        theme={theme => ({\r\n                            ...theme,\r\n                            borderRadius: 2,\r\n                            colors: {\r\n                                ...theme.colors,\r\n                                primary25: '#EAEAEA',\r\n                                primary: 'lightgray',\r\n                            },\r\n                        })}\r\n                        styles={{\r\n                            control: base => ({\r\n                                ...base,\r\n                                height: 80,\r\n                                minHeight: 80\r\n                            })\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavBigScreen;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport searchIcon from './icons/search.svg';\r\nimport searchRandomIcon from './icons/searchRandom.svg';\r\nimport backIcon from './icons/back.svg';\r\nimport Select from 'react-select';\r\nimport TopNavMenu from './TopNavMenu';\r\n\r\nclass TopNavMobile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchQuery: \"\",\r\n            isRandomSearch: false,\r\n            languages: [\r\n                { value: 'en', label: 'En' },\r\n                { value: 'fr', label: 'Fr' }],\r\n            selectedLanguage: { value: 'en', label: 'En' },\r\n            searchBoxActivated: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.searchBoxActivated) {\r\n            return (\r\n                <div style={{display: \"flex\"}}> \r\n                    <input className=\"desactivateSearchIcon\" title=\"search\" alt=\"search\" type=\"image\" src={backIcon} width=\"100%\" height=\"100%\" onClick={() => this.setState({ searchBoxActivated: !this.state.searchBoxActivated })} />\r\n                    <div className=\"topNavMobileSearchActivated\">\r\n                        <form className=\"searchBoxMobile\" onSubmit={(e) => { this.props.updateSearchQuery(this.state.searchQuery, this.state.isRandomSearch); e.preventDefault(); }}>\r\n                            <input autoFocus type=\"text\" alt=\"\" placeholder=\"Search Spiritual Quotes\" name=\"search\" style={{ paddingLeft: \"8px\" }} value={this.state.searchQuery} onChange={(e) => this.setState({ searchQuery: e.target.value })} />\r\n                            <input className=\"searchIcon\" title=\"search\" alt=\"search\" type=\"image\" src={searchIcon} width=\"100%\" height=\"100%\" onClick={() => this.setState({ isRandomSearch: false })} />\r\n                            <input className=\"searchIcon\" title=\"search randomly\" alt=\"search randomly\" type=\"image\" width=\"100%\" height=\"100%\" src={searchRandomIcon} onClick={() => this.setState({ isRandomSearch: true })} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"topNavMobile\">\r\n                    <div className=\"menuAndLogoMobile\">\r\n                        <TopNavMenu/>\r\n                        <div className=\"logo\">\r\n                            <a href=\"/\">\r\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"searchBoxToggle\">\r\n                        <input title=\"search\" alt=\"search\" type=\"image\" src={searchIcon} width=\"100%\" height=\"100%\" onClick={() => this.setState({ searchBoxActivated: !this.state.searchBoxActivated })} />\r\n                    </div>\r\n                    <div className=\"languagesSelector\">\r\n                        <Select\r\n                            options={this.state.languages}\r\n                            value={[this.state.selectedLanguage]}\r\n                            onChange={(newValue, actionMeta) => this.setState({ selectedLanguage: newValue })}\r\n                            theme={theme => ({\r\n                                ...theme,\r\n                                borderRadius: 2,\r\n                                colors: {\r\n                                    ...theme.colors,\r\n                                    primary25: '#EAEAEA',\r\n                                    primary: 'lightgray',\r\n                                },\r\n                            })}\r\n                            styles={{\r\n                                control: base => ({\r\n                                    ...base,\r\n                                    height: 30,\r\n                                    minHeight: 30\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default TopNavMobile;","import React from 'react'\r\nimport TopNavDesktop from './TopNavDesktop'\r\nimport TopNavBigScreen from './TopNavBigScreen'\r\nimport TopNavMobile from './TopNavMobile'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst TopNav = (props) => {\r\n    const isBigScreen = useMediaQuery({ query: '(min-device-width: 1824px)' });\r\n    const isDesktopOrTablet = useMediaQuery({\r\n        query: '(min-device-width: 600px)'\r\n    })\r\n\r\n    if (isBigScreen) {\r\n        return <TopNavBigScreen updateSearchQuery={props.updateSearchQuery} />;\r\n    }\r\n    else if (isDesktopOrTablet) {\r\n        return <TopNavDesktop updateSearchQuery={props.updateSearchQuery} />\r\n    }\r\n    else { //Mobile\r\n        return <TopNavMobile updateSearchQuery={props.updateSearchQuery} />\r\n    }\r\n}\r\n\r\nexport default TopNav;","import React from 'react';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filters: this.initializeFilters(this.props.values), //filterName => isChecked\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.props.values.length === 0) {\r\n            return \"\";\r\n        }\r\n        return (\r\n            <ul className=\"filter\">\r\n                <div className=\"filterCategory\">\r\n                    {this.props.display} <br />\r\n                </div>\r\n                <div className=\"filterValues\" >\r\n                    {Object.keys(this.state.filters).map((filterName, i) =>\r\n                        <div className=\"filterValue\" key={i}>\r\n                            <input type=\"checkbox\" name={filterName} checked={this.state.filters[filterName]} onChange={(e) => this.onCheckboxChange(e)} />\r\n                            <div style={{ all: \"unset\" }} title={filterName}> {filterName}  </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(pastProps, pastState) {\r\n        //the values changed, so we need to reset the checked filtrer to all values\r\n        if (!this.arraysEqual(pastProps.values, this.props.values)) {\r\n            this.setState({\r\n                filters: this.initializeFilters(this.props.values),\r\n            });\r\n        }\r\n    }\r\n\r\n    initializeFilters(filters) {\r\n        let filtersDict = {};\r\n        filters.forEach(element => {\r\n            filtersDict[element] = true; //by default, all filters are checked\r\n        });\r\n        return filtersDict;\r\n    }\r\n\r\n    onCheckboxChange(e) {\r\n        const filterName = e.target.name;\r\n        const isChecked = e.target.checked;\r\n        let newFilters = JSON.parse(JSON.stringify(this.state.filters));\r\n        newFilters[filterName] = isChecked;\r\n        this.setState({ filters: newFilters });\r\n        this.props.onFilterChange(this.getCheckedFiltersName(newFilters));\r\n    }\r\n\r\n    getCheckedFiltersName(filters) {\r\n        var checkedFilters = Object.keys(filters).reduce((p, c) => {\r\n            if (filters[c]) p[c] = filters[c];\r\n            return p;\r\n        }, {});\r\n        return Object.getOwnPropertyNames(checkedFilters);\r\n    }\r\n\r\n    //https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript\r\n    arraysEqual(a, b) {\r\n        if (a === b) return true;\r\n        if (a == null || b == null) return false;\r\n        if (a.length !== b.length) return false;\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\n//Reference: https://medium.com/@farid12ansari7/make-a-snackbar-or-pop-up-notification-for-a-react-web-app-fd246dd1b9f0\r\nexport class Snackbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActive: false\r\n        };\r\n    }\r\n\r\n    openSnackBar = (message = 'Something went wrong...') => {\r\n        this.message = message;\r\n        this.setState({ isActive: true }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ isActive: false });\r\n            }, 3000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isActive } = this.state;\r\n        return (\r\n            <div className={isActive ? \"snackbar snackbarShow\" : \"snackbar\"}>\r\n                {this.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Snackbar;","import React from 'react';\r\nimport copyIcon from './icons/copy.svg';\r\nimport showMoreIcon from './icons/showMore.svg';\r\nimport Modal from 'react-modal';\r\nimport Snackbar from './Snackbar'\r\n\r\nclass QuoteMobile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            modalStyle: {\r\n                content: {\r\n                    top: '45%',\r\n                    left: '50%',\r\n                    right: '20%',\r\n                    bottom: '0%',\r\n                    marginRight: '-50%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.snackbarRef = React.createRef();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"quote\">\r\n                {this.props.quote} <br /> <span style={{ color: \"gray\" }}> -{this.props.author} </span>\r\n                <br />\r\n                <br />\r\n                <div style={{ backgroundColor: \"#f4f6f9\" }}>\r\n                    <span>\r\n                        <button type=\"button\" title=\"Copy\" className=\"quoteButtonMobile\" onClick={((e) => this.copyQuote(this.props.quote + \" -\" + this.props.author))} >\r\n                            <img src={copyIcon} alt=\"\" className=\"quoteIcon\" />\r\n                        </button>\r\n                        <Snackbar ref={this.snackbarRef} />\r\n                        <button type=\"button\" title=\"See more information about the quote\" className=\"quoteButtonMobile\" onMouseDown={this.openModal}>\r\n                            <Modal\r\n                                isOpen={this.state.modalIsOpen}\r\n                                onRequestClose={this.closeModal}\r\n                                style={this.state.modalStyle}\r\n                                closeTimeoutMS={250}\r\n                            >\r\n                                <div onClick={this.closeModal} className=\"close\" /> <br />\r\n                                <h3 style={{ margin: \"0 auto\", width: \"40%\" }}>Complete information about the quote</h3> <br />\r\n                                <div className=\"moreQuoteFields\">\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Quote:&nbsp;</b> <p>{this.props.quote}</p>\r\n                                    </div>\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Author:&nbsp;</b> <p>{this.props.author}</p>\r\n                                    </div>\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Source:&nbsp;</b> <p>{this.props.source}</p>\r\n                                    </div>\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Language:&nbsp;</b> <p>\r\n                                        {this.props.language === 'en' ? 'English' :\r\n                                         this.props.language === 'fr' ? 'Francais' :\r\n                                         'Unknown'\r\n                                        }</p>\r\n                                    </div>\r\n                                    {this.props.chapter !== undefined &&\r\n                                        <div className=\"moreQuoteField\">\r\n                                            <b>Chapter:&nbsp;</b> <p>{this.props.chapter}</p>\r\n                                        </div>\r\n                                    }\r\n                                    {this.props.number !== undefined &&\r\n                                        <div className=\"moreQuoteField\">\r\n                                            <b>Number:&nbsp;</b> <p>{this.props.number}</p>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ Modal>\r\n                            <img src={showMoreIcon} alt=\"\" className=\"quoteIcon\" />\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //reference: https://techoverflow.net/2018/03/30/copying-strings-to-the-clipboard-using-pure-javascript/\r\n    copyQuote(quote) {\r\n        this.copyToClipBoard(quote);\r\n        this.snackbarRef.current.openSnackBar('Copied!');\r\n    }\r\n\r\n    copyToClipBoard(quote) {\r\n        // Create new element\r\n        var el = document.createElement('textarea');\r\n        // Set value (string to be copied)\r\n        el.value = quote;\r\n        // Set non-editable to avoid focus and move outside of view\r\n        el.setAttribute('readonly', '');\r\n        el.style = { position: 'absolute', left: '-9999px' };\r\n        document.body.appendChild(el);\r\n        // Select text inside element\r\n        el.select();\r\n        // Copy text to clipboard\r\n        document.execCommand('copy');\r\n        // Remove temporary element\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n}\r\n\r\n\r\nexport default QuoteMobile;","import React, { useState } from 'react';\r\nimport Filter from \"./Filter\"\r\nimport QuoteMobile from './QuoteMobile';\r\nimport backIcon from './icons/back.svg';\r\nimport plusIcon from './icons/plus.svg';\r\n\r\nconst ContentMobile = (props) => {\r\n    const [contentMobileActivated, setContentMobileActivated] = useState(false);\r\n    const disableFilters = () => {\r\n        props.updateAuthorFilters(props.authorFilters);\r\n        props.updateSourceFilters(props.sourceFilters);\r\n        setContentMobileActivated(false);\r\n    };\r\n    return (\r\n        <div>\r\n            {!contentMobileActivated &&\r\n                <div className=\"filtersLabelMobile\">\r\n                    <b>Filters</b>\r\n                    <img className=\"toggleFiltersMobile\" title=\"search\" alt=\"search\" type=\"image\" src={plusIcon} width=\"100%\" height=\"100%\" onClick={() => setContentMobileActivated(true)} />\r\n                </div>\r\n            }\r\n            <div className=\"contentMobile\">\r\n                <div className=\"filtersMobile\">\r\n                    {contentMobileActivated &&\r\n                        <input className=\"desactivateFiltersMobile\" title=\"search\" alt=\"search\" type=\"image\" src={backIcon} width=\"100%\" height=\"100%\" onClick={() => disableFilters()} />\r\n                    }\r\n                    {contentMobileActivated &&\r\n                        <>\r\n                            <Filter display=\"Author\" values={props.authorFilters} onFilterChange={(authorFilters) => props.updateAuthorFilters(authorFilters)} />\r\n                            <Filter display=\"Book\" values={props.sourceFilters} onFilterChange={(sourceFilters) => props.updateSourceFilters(sourceFilters)} />\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"quotes\">\r\n                    {props.quotes.map((quote, index) =>\r\n                        <QuoteMobile quote={quote.quote} author={quote.author} source={quote.source} language={quote.language} chapter={quote.chapter} number={quote.number} key={index} />\r\n                    )}\r\n                    {props.quotes.length > 0 && !props.isRandomSearch &&\r\n                        <button type=\"button\" className=\"moreQuoteButton\" onClick={() => props.showMoreQuotes()} disabled={props.allQuotesFetched}>Show more</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ContentMobile;","import React from 'react';\r\nimport copyIcon from './icons/copy.svg';\r\nimport showMoreIcon from './icons/showMore.svg';\r\nimport Modal from 'react-modal';\r\nimport Snackbar from './Snackbar'\r\n\r\nclass Quote extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            modalStyle: {\r\n                content: {\r\n                    top: '45%',\r\n                    left: '50%',\r\n                    right: '20%',\r\n                    bottom: '0%',\r\n                    marginRight: '-50%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.snackbarRef = React.createRef();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"quote\">\r\n                {this.props.quote} <br /> <span style={{ color: \"gray\" }}> -{this.props.author} </span>\r\n                <br />\r\n                <br />\r\n                <div style={{ backgroundColor: \"#f4f6f9\" }}>\r\n                    <span>\r\n                        <button type=\"button\" title=\"Copy\" className=\"quoteButton\" onClick={((e) => this.copyQuote(this.props.quote + \" -\" + this.props.author))} >\r\n                            <img src={copyIcon} alt=\"\" className=\"quoteIcon\" />\r\n                        </button>\r\n                        <Snackbar ref={this.snackbarRef} />\r\n                        <button type=\"button\" title=\"See more information about the quote\" className=\"quoteButton\" onMouseDown={this.openModal}>\r\n                            <Modal\r\n                                isOpen={this.state.modalIsOpen}\r\n                                onRequestClose={this.closeModal}\r\n                                style={this.state.modalStyle}\r\n                                closeTimeoutMS={250}\r\n                            >\r\n                                <div onClick={this.closeModal} className=\"close\" /> <br />\r\n                                <h3 style={{ margin: \"0 auto\", width: \"40%\" }}>Complete information about the quote</h3> <br />\r\n                                <div className=\"moreQuoteFields\">\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Quote:&nbsp;</b> <p>{this.props.quote}</p>\r\n                                    </div>\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Author:&nbsp;</b> <p>{this.props.author}</p>\r\n                                    </div>\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Source:&nbsp;</b> <p>{this.props.source}</p>\r\n                                    </div>\r\n                                    <div className=\"moreQuoteField\">\r\n                                        <b>Language:&nbsp;</b> <p>\r\n                                        {this.props.language === 'en' ? 'English' :\r\n                                         this.props.language === 'fr' ? 'Francais' :\r\n                                         'Unknown'\r\n                                        }</p>\r\n                                    </div>\r\n                                    {this.props.chapter !== undefined &&\r\n                                        <div className=\"moreQuoteField\">\r\n                                            <b>Chapter:&nbsp;</b> <p>{this.props.chapter}</p>\r\n                                        </div>\r\n                                    }\r\n                                    {this.props.number !== undefined &&\r\n                                        <div className=\"moreQuoteField\">\r\n                                            <b>Number:&nbsp;</b> <p>{this.props.number}</p>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ Modal>\r\n                            <img src={showMoreIcon} alt=\"\" className=\"quoteIcon\" />\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //reference: https://techoverflow.net/2018/03/30/copying-strings-to-the-clipboard-using-pure-javascript/\r\n    copyQuote(quote) {\r\n        this.copyToClipBoard(quote);\r\n        this.snackbarRef.current.openSnackBar('Copied!');\r\n    }\r\n\r\n    copyToClipBoard(quote) {\r\n        // Create new element\r\n        var el = document.createElement('textarea');\r\n        // Set value (string to be copied)\r\n        el.value = quote;\r\n        // Set non-editable to avoid focus and move outside of view\r\n        el.setAttribute('readonly', '');\r\n        el.style = { position: 'absolute', left: '-9999px' };\r\n        document.body.appendChild(el);\r\n        // Select text inside element\r\n        el.select();\r\n        // Copy text to clipboard\r\n        document.execCommand('copy');\r\n        // Remove temporary element\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({ modalIsOpen: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ modalIsOpen: false });\r\n    }\r\n}\r\n\r\n\r\nexport default Quote;","import React from 'react';\r\nimport Filter from \"./Filter\"\r\nimport Quote from './Quote';\r\n\r\nconst ContentDesktop = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"filters\">\r\n                <Filter display=\"Author\" values={props.authorFilters} onFilterChange={(authorFilters) => props.updateAuthorFilters(authorFilters)} />\r\n                <Filter display=\"Book\" values={props.sourceFilters} onFilterChange={(sourceFilters) => props.updateSourceFilters(sourceFilters)} />\r\n            </div>\r\n            <div className=\"quotes\">\r\n                {props.quotes.map((quote, index) =>\r\n                    <Quote quote={quote.quote} author={quote.author} source={quote.source} language={quote.language} chapter={quote.chapter} number={quote.number} key={index} />\r\n                )}\r\n                {props.quotes.length > 0 && !props.isRandomSearch &&\r\n                    <button type=\"button\" className=\"moreQuoteButton\" onClick={() => props.showMoreQuotes()} disabled={props.allQuotesFetched}>Show more</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentDesktop;","import React from 'react';\r\nimport ContentMobile from './ContentMobile';\r\nimport ContentDesktop from './ContentDesktop';\r\nimport MediaQuery from 'react-responsive'\r\n\r\nclass Content extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quotes: [],\r\n            lastSearchId: \"\",\r\n            quotesPerFetch: 15,\r\n            quotesFetched: 0,\r\n            allQuotesFetched: false,\r\n            authorFilters: [],\r\n            authorFiltersSelected: null,\r\n            sourceFilters: [],\r\n            sourceFiltersSelected: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MediaQuery minDeviceWidth={601}>\r\n                    <ContentDesktop\r\n                        quotes={this.state.quotes}\r\n                        isRandomSearch={this.props.isRandomSearch}\r\n                        authorFilters={this.state.authorFilters}\r\n                        sourceFilters={this.state.sourceFilters}\r\n                        allQuotesFetched={this.state.allQuotesFetched}\r\n                        updateAuthorFilters={(authorFilters) => this.updateAuthorFilters(authorFilters)}\r\n                        updateSourceFilters={(sourceFilters) => this.updateSourceFilters(sourceFilters)}\r\n                        showMoreQuotes={() => this.showMoreQuotes()}\r\n                    />\r\n                </MediaQuery>\r\n                <MediaQuery maxDeviceWidth={600}>\r\n                    <ContentMobile\r\n                        quotes={this.state.quotes}\r\n                        isRandomSearch={this.props.isRandomSearch}\r\n                        authorFilters={this.state.authorFilters}\r\n                        sourceFilters={this.state.sourceFilters}\r\n                        allQuotesFetched={this.state.allQuotesFetched}\r\n                        updateAuthorFilters={(authorFilters) => this.updateAuthorFilters(authorFilters)}\r\n                        updateSourceFilters={(sourceFilters) => this.updateSourceFilters(sourceFilters)}\r\n                        showMoreQuotes={() => this.showMoreQuotes()}\r\n                    />\r\n                </MediaQuery>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.actualiseQuotes();\r\n    }\r\n\r\n    componentDidUpdate(pastProps, pastState) {\r\n        if (pastProps.searchId !== this.props.searchId) {\r\n            this.actualiseQuotes();\r\n        }\r\n    }\r\n\r\n    actualiseQuotes() {\r\n        this.setState({\r\n            quotesFetched: 0,\r\n            lastSearchId: this.props.searchId,\r\n            allQuotesFetched: false,\r\n            authorFiltersSelected: this.props.isRandomSearch ? this.state.authorFiltersSelected : null,\r\n            sourceFiltersSelected: this.props.isRandomSearch ? this.state.sourceFiltersSelected : null\r\n        },\r\n            () => {\r\n                this.fetchFilterValues();\r\n                this.fetchQuotes();\r\n            });\r\n    }\r\n\r\n    fetchFilterValues() {\r\n        fetch(`/authors?q=${this.props.searchQuery}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let authors = [];\r\n                res.forEach(x => authors.push(x.author));\r\n                this.setState({ authorFilters: authors });\r\n            });\r\n        fetch(`/sources?q=${this.props.searchQuery}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let sources = [];\r\n                res.forEach(x => sources.push(x.source));\r\n                this.setState({ sourceFilters: sources });\r\n            });\r\n    }\r\n\r\n    fetchQuotes(accumulateQuotes = false) {\r\n        let authorFilter = this.state.authorFiltersSelected == null ? '' : `authors=${this.state.authorFiltersSelected}&`;\r\n        let sourceFilter = this.state.sourceFiltersSelected == null ? '' : `sources=${this.state.sourceFiltersSelected}&`;\r\n        fetch(`/quotes?q=${this.props.searchQuery}&` +\r\n            authorFilter +\r\n            sourceFilter +\r\n            `count=${this.state.quotesPerFetch}&` +\r\n            `offset=${this.state.quotesFetched}&` +\r\n            `random=${this.props.isRandomSearch}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (accumulateQuotes) {\r\n                    this.setState({\r\n                        quotes: res.concat(this.state.quotes),\r\n                        quotesReady: true,\r\n                        allQuotesFetched: res.length < this.state.quotesPerFetch\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        quotes: res,\r\n                        quotesReady: true,\r\n                        allQuotesFetched: res.length < this.state.quotesPerFetch\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    showMoreQuotes() {\r\n        this.setState({ quotesFetched: this.state.quotesFetched + this.state.quotesPerFetch },\r\n            () => this.fetchQuotes(true));\r\n    }\r\n\r\n    updateAuthorFilters(authorFilters) {\r\n        this.setState({\r\n            authorFiltersSelected: authorFilters,\r\n            quotesFetched: 0,\r\n        },\r\n            this.fetchQuotes);\r\n    }\r\n\r\n    updateSourceFilters(sourceFilters) {\r\n        this.setState({\r\n            sourceFiltersSelected: sourceFilters,\r\n            quotesFetched: 0,\r\n        },\r\n            this.fetchQuotes);\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nconst AboutPage = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"pageTitle\">\r\n                About\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                À son époque comme aujourd’hui, le génie de Léonard de Vinci est incontestable. La raison de ce consensus : une technique hors pair et un désir constant d’innover. Comme lui, nous ne nous satisfaisons pas de nos acquis et nous valorisons l’importance d’expérimenter, d’itérer et d’innover au quotidien.\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                En plus d’être un ingénieur émérite, de Vinci était également peintre, sculpteur et poète, prouvant qu’il est possible d’être excellent en sciences et en arts. Chez Leonard, nous accordons autant d’importance à la technique qu’à la créativité, et nous encourageons nos talents à ne pas se limiter à l’intitulé de leur poste en favorisant les échanges et les formations entre les différentes équipes.\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                Comme de Vinci, nous pensons que « l’apprentissage n’épuise jamais l’esprit » et que « plus on connaît, plus on aime ». Dans un marché en mouvement constant, être passionné est la seule clé pour garder toujours une longueur d’avance.\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst DownloadPage = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"pageTitleDownload\">\r\n                Download all quotes\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                À son époque comme aujourd’hui, le génie de Léonard de Vinci est incontestable. La raison de ce consensus : une technique hors pair et un désir constant d’innover. Comme lui, nous ne nous satisfaisons pas de nos acquis et nous valorisons l’importance d’expérimenter, d’itérer et d’innover au quotidien.\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                En plus d’être un ingénieur émérite, de Vinci était également peintre, sculpteur et poète, prouvant qu’il est possible d’être excellent en sciences et en arts. Chez Leonard, nous accordons autant d’importance à la technique qu’à la créativité, et nous encourageons nos talents à ne pas se limiter à l’intitulé de leur poste en favorisant les échanges et les formations entre les différentes équipes.\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                Comme de Vinci, nous pensons que « l’apprentissage n’épuise jamais l’esprit » et que « plus on connaît, plus on aime ». Dans un marché en mouvement constant, être passionné est la seule clé pour garder toujours une longueur d’avance.\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DownloadPage;","import React from 'react';\r\n\r\nconst ContactPage = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"pageTitle\">\r\n                Contact\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                À son époque comme aujourd’hui, le génie de Léonard de Vinci est incontestable. La raison de ce consensus : une technique hors pair et un désir constant d’innover. Comme lui, nous ne nous satisfaisons pas de nos acquis et nous valorisons l’importance d’expérimenter, d’itérer et d’innover au quotidien.\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                En plus d’être un ingénieur émérite, de Vinci était également peintre, sculpteur et poète, prouvant qu’il est possible d’être excellent en sciences et en arts. Chez Leonard, nous accordons autant d’importance à la technique qu’à la créativité, et nous encourageons nos talents à ne pas se limiter à l’intitulé de leur poste en favorisant les échanges et les formations entre les différentes équipes.\r\n            </div>\r\n            <br/>\r\n            <div className=\"pageParagraph\">\r\n                Comme de Vinci, nous pensons que « l’apprentissage n’épuise jamais l’esprit » et que « plus on connaît, plus on aime ». Dans un marché en mouvement constant, être passionné est la seule clé pour garder toujours une longueur d’avance.\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport TopNav from './TopNav'\r\nimport Content from './Content'\r\nimport AboutPage from './AboutPage'\r\nimport DownloadPage from './DownloadPage'\r\nimport ContactPage from './ContactPage'\r\n\r\nclass Quote extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchId: this.uuidv4(),\r\n            searchQuery: \"\",\r\n            isRandomSearch: true,\r\n        }\r\n\r\n        this.updateSearchQuery = this.updateSearchQuery.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <>\r\n                            <TopNav updateSearchQuery={this.updateSearchQuery} />\r\n                            <Content searchId={this.state.searchId}\r\n                                searchQuery={this.state.searchQuery}\r\n                                isRandomSearch={this.state.isRandomSearch}\r\n                            />\r\n                        </>\r\n                    </Route>\r\n                    <Route exact path=\"/about\">\r\n                        <>\r\n                            <TopNav updateSearchQuery={this.updateSearchQuery} />\r\n                            <AboutPage/>\r\n                        </>\r\n                    </Route>\r\n                    <Route exact path=\"/download\">\r\n                        <>\r\n                            <TopNav updateSearchQuery={this.updateSearchQuery} />\r\n                            <DownloadPage/>\r\n                        </>\r\n                    </Route>\r\n                    <Route exact path=\"/contact\">\r\n                        <>\r\n                            <TopNav updateSearchQuery={this.updateSearchQuery} />\r\n                            <ContactPage/>\r\n                        </>\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n\r\n    updateSearchQuery(searchQuery, isRandomSearch) {\r\n        this.setState({\r\n            searchId: this.uuidv4(),\r\n            searchQuery: searchQuery,\r\n            isRandomSearch: isRandomSearch,\r\n        });\r\n    }\r\n\r\n    //https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n    uuidv4() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            // eslint-disable-next-line\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n\r\nexport default Quote;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}